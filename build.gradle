plugins {
  id 'application'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  id 'org.springframework.boot' version '2.4.4'
  id 'uk.gov.hmcts.java' version '0.12.0'
  id 'com.github.ben-manes.versions' version '0.28.0'
  id 'com.github.spacialcircumstances.gradle-cucumber-reporting' version '0.1.23'
  id 'org.sonarqube' version '2.8'
  id 'au.com.dius.pact' version '4.1.7'
}

ext['spring-security.version'] = '5.4.5'
ext['spring-framework.version'] = '5.3.7'

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

allprojects {
  sourceCompatibility = '11'
  targetCompatibility = '11'
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  contractTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/contractTest/java')
    }
    resources.srcDir file('src/contractTest/resources')
  }

}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
}

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
}

task smoke(type: Test) {
  description = "Runs smoke tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath

  generateCucumberReports.enabled = false

  doLast {
    generateCucumberReports.enabled = true
    cucumberReports.outputDir = file("${project.buildDir}/reports/tests/befta/smoke")
    cucumberReports.reports = files("${cucumberReports.outputDir}/cucumber.json")

    javaexec {
      main = "uk.gov.hmcts.reform.managecase.befta.ManageCaseAssignmentBeftaMain"
      classpath += sourceSets.functionalTest.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
      args = [
               '--plugin', "json:${cucumberReports.outputDir}/cucumber.json",
               '--tags', '@Smoke and not @Ignore',
               '--glue', 'uk.gov.hmcts.befta.player', 'src/functionalTest/resources/features'
             ]
      // '--add-opens=...' added to suppress 'WARNING: An illegal reflective access operation has occurred' in uk.gov.hmcts.befta.util.CucumberStepAnnotationUtils
      jvmArgs = [ '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED' ]
    }
  }

  outputs.upToDateWhen { false }
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath

  generateCucumberReports.enabled = false

  doLast {
    generateCucumberReports.enabled = true
    cucumberReports.outputDir = file("${project.buildDir}/reports/tests/befta/functional")
    cucumberReports.reports = files("${cucumberReports.outputDir}/cucumber.json")

    javaexec {
      main = "uk.gov.hmcts.reform.managecase.befta.ManageCaseAssignmentBeftaMain"
      classpath += sourceSets.functionalTest.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
      args = [
               '--threads', '5',
               '--plugin', "json:${cucumberReports.outputDir}/cucumber.json",
               '--tags', 'not @Ignore',
               '--glue', 'uk.gov.hmcts.befta.player', 'src/functionalTest/resources/features'
             ]
      // '--add-opens=...' added to suppress 'WARNING: An illegal reflective access operation has occurred' in uk.gov.hmcts.befta.util.CucumberStepAnnotationUtils
      jvmArgs = [ '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED' ]
    }
  }

  outputs.upToDateWhen { false }
}

compileJava {
  options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.ext {
  pactVersion = getCheckedOutGitCommitHash()
}

task contract(type: Test) {
  description = 'Runs the consumer Pact tests'
  useJUnitPlatform()
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath
  include "uk/gov/hmcts/reform/managecase/api/controller/provider/**"

}

task runProviderPactVerification(type: Test) {
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath
  systemProperty 'pact.verifier.publishResults', System.getProperty('pact.verifier.publishResults')
  systemProperty 'pact.provider.version', project.pactVersion
}

runProviderPactVerification.finalizedBy pactVerify

def getCheckedOutGitCommitHash() {
  'git rev-parse --verify --short HEAD'.execute().text.trim()
}

pact {
  publish {
    pactDirectory = 'pacts'
    pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
    tags = [System.getenv("PACT_BRANCH_NAME") ?:'Dev']
    version = project.pactVersion
  }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

sonarqube {
  properties {
    property "sonar.projectName", "Reform::manage-case-assignment"
    property "sonar.projectKey", "uk.gov.hmcts.reform:manage-case-assignment"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    property "sonar.coverage.exclusions", "**/client/datastore/model/*.java,**/client/datastore/model/elasticsearch/*.java,**/client/definitionstore/model/*.java"
    property "sonar.exclusions","**/client/datastore/model/CaseFieldDefinition.java,**/config/SecurityConfiguration.java"
  }
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

dependencyCheck {
  suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:2020.0.1"
  }
  dependencies {
    dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.61'
    // CVE-2018-10237 - Unbounded memory allocation
    dependencySet(group: 'com.google.guava', version: '30.0-jre') {
      entry 'guava'
    }
    // CVE-2020-9488
    dependencySet(group: 'org.apache.logging.log4j', version: '2.13.2') {
      entry 'log4j-api'
    }
    // CVE-2021-25122
    dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.43') {
      entry 'tomcat-embed-core'
      entry 'tomcat-embed-el'
      entry 'tomcat-embed-websocket'
    }
    // multiple CVEs
    dependencySet(group: 'com.netflix.servo', version: '0.12.5') {
      entry 'servo-core'
    }
    dependencySet(group: 'org.codehaus.groovy', version: '3.0.3') {
      entry 'groovy'
      entry 'groovy-xml'
      entry 'groovy-json'
      entry 'groovy-nio'
    }
  }
}

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
  maven {
    url 'https://jitpack.io'
  }
  maven {
    url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/'
  }
  maven {
    url  "https://dl.bintray.com/gov-uk-notify/maven"
  }
}

def versions = [
  junit           : '5.6.2',
  junitPlatform   : '1.6.2',
  reformLogging   : '5.1.1',
  springBoot      : springBoot.class.package.implementationVersion,
  springfoxSwagger: '3.0.0',
  restAssured    : '4.3.1',
  lombok  : '1.18.8',
  pact_version    : '4.1.7',
]

ext.libraries = [
  junit5: [
    "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
    "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
    "org.junit.platform:junit-platform-engine:${versions.junitPlatform}"
  ]
]

// GOV.UK Notify has CVE-2021-29425 and transient dependency commons-io:commons-io needs updating
// At the time latest is:
// https://search.maven.org/artifact/uk.gov.service.notify/notifications-java-client/3.17.0-RELEASE/jar
configurations.all {
  resolutionStrategy {
    force 'commons-io:commons-io:2.8.0'
  }
}

dependencies {
  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.2.7.RELEASE'

  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
  implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.0.1'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas'

  implementation group: 'org.springframework.retry', name: 'spring-retry'

  implementation group: 'io.springfox', name: 'springfox-boot-starter', version: versions.springfoxSwagger

  implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.0.4'

  implementation group: 'io.jsonwebtoken', name: 'jjwt', version:'0.9.1'
  implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.1.2'
  implementation group: 'uk.gov.hmcts.reform', name: 'idam-client', version: '1.5.5'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-zuul', version: '2.2.3.RELEASE'

  implementation "org.springframework.boot:spring-boot-starter-oauth2-client:2.3.8.RELEASE"
  implementation "com.nimbusds:nimbus-jose-jwt:7.9"
  implementation "net.minidev:json-smart:2.3"
  implementation "org.springframework.security:spring-security-web:5.4.5"
  implementation "org.springframework.security:spring-security-config:5.4.5"
  implementation "org.springframework.boot:spring-boot-starter-oauth2-client:2.4.5"
  implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server:2.4.5"

  implementation "io.github.openfeign:feign-httpclient:11.0"
  testCompile 'io.github.openfeign:feign-jackson:10.7.0'
  testCompile group: 'io.github.openfeign.form', name: 'feign-form', version: '3.8.0'
  compile group: 'io.github.openfeign.form', name: 'feign-form-spring', version: '3.8.0'
  implementation "com.github.ben-manes.caffeine:caffeine:2.7.0"
  implementation "org.apache.httpcomponents:httpclient:4.5.13"

  implementation group: 'javax.inject', name: 'javax.inject', version: '1'
  implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.7'
  implementation 'uk.gov.service.notify:notifications-java-client:3.15.1-RELEASE'

  testImplementation libraries.junit5
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }

  testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-contract-stub-runner', version: '2.2.2.RELEASE'
  testImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
  testImplementation group: 'io.rest-assured', name: 'json-path', version: versions.restAssured
  testImplementation group: 'io.rest-assured', name: 'xml-path', version: versions.restAssured

  // https://mvnrepository.com/artifact/nl.jqno.equalsverifier/equalsverifier
  testCompile group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '3.4.2'

  // groovy v3.* added to avoid 'WARNING: Illegal reflective access by org.codehaus.groovy.reflection.CachedClass'
  // in groovy:2.5.* when running functional/befta tests
  testImplementation group: 'org.codehaus.groovy', name: 'groovy', version: '3.0.3'

  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath

  testImplementation group: 'com.github.hmcts', name: 'ccd-test-definitions', version: '7.0.0'

  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath

  contractTestCompile group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
  contractTestCompile group: 'au.com.dius.pact.consumer', name: 'java8', version: versions.pact_version
  contractTestRuntime group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
  contractTestRuntime group: 'au.com.dius.pact.consumer', name: 'java8', version: versions.pact_version
  contractTestImplementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.7'

  contractTestCompile group: 'au.com.dius.pact.provider', name: 'junit5', version: versions.pact_version
  contractTestCompile group: 'au.com.dius.pact.provider', name: 'spring', version: versions.pact_version
  contractTestCompile group: 'au.com.dius.pact.provider', name: 'junit5spring', version: versions.pact_version
  contractTestCompile("org.junit.jupiter:junit-jupiter-api:5.7.0")
  contractTestRuntime("org.junit.jupiter:junit-jupiter-engine:5.7.0")
  contractTestImplementation('org.junit.jupiter:junit-jupiter-api:5.7.0')
  contractTestRuntimeOnly "org.junit.platform:junit-platform-commons:1.7.0"
  contractTestImplementation group: 'uk.gov.hmcts.reform', name: 'idam-client', version: '1.5.5'
  contractTestImplementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.1.2'
  contractTestImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  contractTestImplementation sourceSets.main.runtimeClasspath
  contractTestImplementation sourceSets.test.runtimeClasspath


}

mainClassName = 'uk.gov.hmcts.reform.managecase.Application'

bootJar {
  getArchiveFileName().set(provider {
    'manage-case-assignment.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
