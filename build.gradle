plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'
  id 'org.springframework.boot' version '2.3.0.RELEASE'
  id 'uk.gov.hmcts.java' version '0.5.0'
  id 'com.github.ben-manes.versions' version '0.28.0'
  id 'com.github.spacialcircumstances.gradle-cucumber-reporting' version '0.1.21'
  id 'org.sonarqube' version '2.8'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

allprojects {
  sourceCompatibility = '11'
  targetCompatibility = '11'
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
}

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
}

task smoke(type: Test) {
  description = "Runs smoke tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath

  generateCucumberReports.enabled = false

  doLast {
    generateCucumberReports.enabled = true
    cucumberReports.outputDir = file("${project.buildDir}/reports/tests/befta/smoke")
    cucumberReports.reports = files("${cucumberReports.outputDir}/cucumber.json")

    javaexec {
      main = "uk.gov.hmcts.reform.managecase.befta.ManageCaseAssignmentBeftaMain"
      classpath += sourceSets.functionalTest.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
      args = ['--plugin', "json:${cucumberReports.outputDir}/cucumber.json", '--tags', '@Smoke', '--glue',
              'uk.gov.hmcts.befta.player', 'src/functionalTest/resources/features']
      // '--add-opens=...' added to suppress 'WARNING: An illegal reflective access operation has occurred' in uk.gov.hmcts.befta.util.CucumberStepAnnotationUtils
      jvmArgs = [ '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED' ]
    }
  }

  outputs.upToDateWhen { false }
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath

  generateCucumberReports.enabled = false

  doLast {
    generateCucumberReports.enabled = true
    cucumberReports.outputDir = file("${project.buildDir}/reports/tests/befta/functional")
    cucumberReports.reports = files("${cucumberReports.outputDir}/cucumber.json")

    javaexec {
      main = "uk.gov.hmcts.reform.managecase.befta.ManageCaseAssignmentBeftaMain"
      classpath += sourceSets.functionalTest.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
      args = ['--plugin', "json:${cucumberReports.outputDir}/cucumber.json", '--tags', 'not @Ignore', '--glue',
              'uk.gov.hmcts.befta.player', 'src/functionalTest/resources/features']
      // '--add-opens=...' added to suppress 'WARNING: An illegal reflective access operation has occurred' in uk.gov.hmcts.befta.util.CucumberStepAnnotationUtils
      jvmArgs = [ '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED' ]
    }
  }

  outputs.upToDateWhen { false }
}

pmd {
  toolVersion = "6.24.0"
  maxFailures = 1
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  // https://github.com/pmd/pmd/issues/876
  ruleSets = []
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

compileJava {
  options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

sonarqube {
  properties {
    property "sonar.projectName", "Reform::manage-case-assignment"
    property "sonar.projectKey", "uk.gov.hmcts.reform:manage-case-assignment"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
  }
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyManagement {
  dependencies {
    dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.65'
    // CVE-2018-10237 - Unbounded memory allocation
    dependencySet(group: 'com.google.guava', version: '29.0-jre') {
      entry 'guava'
    }
    // CVE-2020-9488
    dependencySet(group: 'org.apache.logging.log4j', version: '2.13.2') {
      entry 'log4j-api'
    }
    // CVE-2020-11996, CVE-2020-13934
    dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.37') {
      entry 'tomcat-embed-core'
      entry 'tomcat-embed-el'
      entry 'tomcat-embed-websocket'
    }
    // multiple CVEs
    dependencySet(group: 'com.netflix.servo', version: '0.12.4') {
      entry 'servo-core'
    }
  }
}

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
  maven {
    url 'https://dl.bintray.com/hmcts/hmcts-maven'
  }
  maven {
    url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/'
  }
  maven {
    url  "https://dl.bintray.com/gov-uk-notify/maven"
  }
}

def versions = [
  junit           : '5.6.2',
  junitPlatform   : '1.6.2',
  reformLogging   : '5.1.1',
  springBoot      : springBoot.class.package.implementationVersion,
  springfoxSwagger: '2.10.5',
  restAssured    : '4.2.0',
  lombok  : '1.18.8'
]

ext.libraries = [
  junit5: [
    "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
    "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
    "org.junit.platform:junit-platform-engine:${versions.junitPlatform}"
  ]
]

dependencies {
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
  implementation group: 'org.springframework.retry', name: 'spring-retry'

  implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
  implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger
  implementation group: 'io.springfox', name: 'springfox-spring-webmvc', version: versions.springfoxSwagger

  implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.0.4'

  implementation group: 'io.jsonwebtoken', name: 'jjwt', version:'0.9.1'
  implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.1.2'
  implementation group: 'uk.gov.hmcts.reform', name: 'idam-client', version: '1.5.5'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-zuul', version: '2.2.3.RELEASE'

  implementation "org.springframework.security:spring-security-web"
  implementation "org.springframework.security:spring-security-config"
  implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
  implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
  implementation "com.nimbusds:nimbus-jose-jwt:7.9"
  implementation "net.minidev:json-smart:2.3"
  implementation "io.github.openfeign:feign-httpclient:11.0"
  implementation "com.github.ben-manes.caffeine:caffeine:2.7.0"

  implementation group: 'javax.inject', name: 'javax.inject', version: '1'
  implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.7'
  implementation 'uk.gov.service.notify:notifications-java-client:3.15.1-RELEASE'

  testImplementation libraries.junit5
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }

  testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-contract-stub-runner', version: '2.2.2.RELEASE'
  testImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
  testImplementation group: 'io.rest-assured', name: 'json-path', version: versions.restAssured
  testImplementation group: 'io.rest-assured', name: 'xml-path', version: versions.restAssured

  // https://mvnrepository.com/artifact/nl.jqno.equalsverifier/equalsverifier
  testCompile group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '3.4.2'

  // groovy v3.* added to avoid 'WARNING: Illegal reflective access by org.codehaus.groovy.reflection.CachedClass'
  // in groovy:2.5.* when running functional/befta tests
  testImplementation group: 'org.codehaus.groovy', name: 'groovy', version: '3.0.3'

  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath

  testImplementation group: 'uk.gov.hmcts', name: 'befta-fw', version: '5.9.0'

  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath

}

mainClassName = 'uk.gov.hmcts.reform.managecase.Application'

bootJar {
  getArchiveFileName().set(provider {
    'manage-case-assignment.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
